## ===============================================================================
## Except for any open source software components embedded in this Infosys proprietary software program
## (Infosys Automation Platform), this Program is protected by copyright laws,
## international treaties and other pending or existing intellectual property rights in India, the United States
## and other countries.
## Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means
## (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any
## distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will
## be prosecuted to the maximum extent possible under the law.
## ===============================================================================
## Generated by Infosys Automation Platform.
## Please follow agreement before making changes to this file.
## ===============================================================================

##############################################################################
##This class was code generated by Infosys Automation Platform.

## Description: This file contains utility functions to be used in scripts

##Copyright (c) 2014 - 2015 Infosys Technologies Ltd. All Rights Reserved.
##############################################################################


import clr
import sys
import ConfigParser
import time
import datetime
import socket
import getpass
import traceback
import logging
import logging.config
from System.IO import Directory, Path
import iap_constants
from iap_logger import *

directory = Directory.GetCurrentDirectory()
rootDirectory = Directory.GetParent(directory).FullName

sys.path.append(iap_constants.IRONPYTHON_PATH)
sys.path.append(rootDirectory)

@Raw(Model.AddReference) 

##############################################################################
### Method         : createLogger
### Description    : Creates logger for the resolver
##############################################################################
def create_iap_logger(scriptId = None):
    logger = None  
    if int(getValueFromConfig(iap_constants.LOGGER, iap_constants.LOGGER_SOURCE)) == int(1):
        ##use DB logger        
        logger = Iap_db_logger(scriptId)             
    else:
        # create console/text file logger
        logger = Iap_file_logger(scriptId) 
    return logger

def consoleLog(message):
    filePath = iap_constants.CONSOLE_LOG_CONFIG
    logging.config.fileConfig(filePath)
    pythonConsoleLogger = logging.getLogger('IAP')
    pythonConsoleLogger.info(message)

##############################################################################
### Method         : getValueFromConfig
### Description    : Reads a value from config
### Input          : Config group and key are required
##############################################################################
def getValueFromConfig(group, key):
    config = ConfigParser.ConfigParser()
    config.read(iap_constants.APP_INI_PATH)
    return config.get(group, key,0) 

##############################################################################
### Method         : readDataFromClipboard
### Description    : Read Data from clipboard
##############################################################################
def readDataFromClipboard(automationFacade, waitTimeInSeconds = 120):   
    data = None
    
    automationFacade.Sleep(2)
    timeElapsed = int(0)
    while(timeElapsed < int(waitTimeInSeconds)):
        try:
            data = automationFacade.Read()
            automationFacade.ClearClipboard()
            break;
        except:
            automationFacade.Sleep(3) 
            timeElapsed +=3   
    return data

##############################################################################
### Method         :  findControlWithFiniteTime
### Description    :  Find control on the screen for waitTimeInSeconds seconds
###                   Does not look for control on screen for ever 
##############################################################################
def findControlWithFiniteTime(automationFacade, canonicalPath, waitTimeInSeconds = 180): 
    automationFacade.WaitForever = False
    timeElapsed = 0
    ctrl = None
    while(timeElapsed < waitTimeInSeconds):
        try:
            ctrl = automationFacade.FindControl(canonicalPath)
            if ctrl is not None:
                break;
        except:
            automationFacade.Sleep(2) 
            timeElapsed +=2          
    automationFacade.WaitForever = True                    
    return ctrl

##############################################################################
### Method         :  Copies value of a TextBox/Label control
### Input          :  Control canonical path, xoffset and y offset to the Value
### Output         :  Value of the Label/TextBox
##############################################################################
def copyTextBoxValuesByCtrlPath(automationFacade, canonicalPath, xOffSet, yOffSet): 
    automationFacade.ClearClipboard()
    ctrlRef = automationFacade.FindControl(canonicalPath)       
    ctrlRef.OffsetRegion(xOffSet,yOffSet)
    ctrlRef.Click()
    ctrlRef.DoubleClick()
    automationFacade.Copy()
    automationFacade.Sleep(2)
    ctrlValue = ReadDataFromClipboard(automationFacade)    
    return ctrlValue

##############################################################################
### Method         :  copyTextByMouseDrag
### Description    :  Copies part/full value of a Label control by selecting
###                   Text using Mouse drag
### Input          :  Control canonical path, xoffset and y offset to the Value
### Output         :  Value of the selected Text
##############################################################################    
def copyTextByMouseDrag(automationFacade, canonicalPath, xOffset, yOffset):
    ctrlRef = automationFacade.FindControl(canonicalPath)  
    ctrlRef.OffsetRegion(0, 235)
    ctrlRef.Hover()
    automationFacade.Sleep(3)
    ctrlRef.MouseDown()
    automationFacade.Sleep(2)
    ctrlRef.OffsetRegion(xOffset, yOffset)
    ctrlRef.Hover()
    ctrlRef.MouseUp()
    automationFacade.Copy()
    ctrlValue = readDataFromClipboard(automationFacade)
    return ctrlValue

##############################################################################
### Method         :  getLoggedInUser
### Output         :  user Name of the logged in user 
##############################################################################
def getLoggedInUser() :
    return getpass.getuser()

##############################################################################
### Method         :  getMachineName
### Output         :  Machine Name on which the script is executing
##############################################################################
def getMachineName() :
    return socket.gethostname()

##############################################################################
### Method         :  getMachineName
### Output         :  IP of the machine on which the script is executing
##############################################################################
def getMachineIP() :
    return socket.gethostbyname(socket.gethostname())

##############################################################################
### Method         :  getCurrentTimeInMilliSec
### Output         :  Current Time converted to milli seconds 
##############################################################################
def getCurrentTimeInMilliSec():
    milliSec = int(round(time.time() * 1000)) 
    return milliSec

##############################################################################
### Method         :  getCurrentDateTime
### Output         :  Current Date and Time in format YY/MM/DD H:M:S
##############################################################################
def getCurrentDateTime():
    now = datetime.datetime.now() 
    dayTime=now.strftime('%Y/%m/%d %H:%M:%S')
    return dayTime







