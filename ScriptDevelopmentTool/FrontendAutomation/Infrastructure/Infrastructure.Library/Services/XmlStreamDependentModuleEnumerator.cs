/****************************************************************
Copyright 2021 Infosys Ltd. 
Use of this source code is governed by Apache License Version 2.0 that can be found in the LICENSE file or at 
http://www.apache.org/licenses/
 ***************************************************************/
//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by this guidance package as part of the solution template
//
// The XmlStreamDependentModuleEnumerator class provides an implementation of IModuleEnumerator
// that is used to retrieve an array of IModuleInfo. This service depends on the IModuleInfoStore service
// that provides the storage of the profile catalog
// 
//  
//
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Xml;
using IMSWorkBench.Infrastructure.Library.Properties;
using IMSWorkBench.Infrastructure.Library.Services;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.Configuration;
using Microsoft.Practices.CompositeUI.Services;

namespace IMSWorkBench.Infrastructure.Library.Services
{
    /// <summary>
    /// This implementation of IModuleEnumerator processes the assemblies specified
    /// in a solution profile.
    /// </summary>
    public class XmlStreamDependentModuleEnumerator : IModuleEnumerator
    {
        private IModuleInfoStore _moduleInfoStore;

        /// <summary>
        /// Initializes a new instance of the <see cref="T:XmlStreamDependentModuleEnumerator"/> class.
        /// </summary>
        public XmlStreamDependentModuleEnumerator()
        {
        }

        [ServiceDependency]
        public IModuleInfoStore ModuleInfoStore
        {
            get { return _moduleInfoStore; }
            set { _moduleInfoStore = value; }
        }

        /// <summary>
        /// Gets an array of <see cref="T:Microsoft.Practices.CompositeUI.Configuration.IModuleInfo"/>
        /// enumerated from the source the enumerator is processing.
        /// </summary>
        /// <returns>
        /// An array of <see cref="T:Microsoft.Practices.CompositeUI.Configuration.IModuleInfo"/> instances.
        /// </returns>
        public IModuleInfo[] EnumerateModules()
        {
            string xml = _moduleInfoStore.GetModuleListXml();

            if (String.IsNullOrEmpty(xml))
                return new DependentModuleInfo[0];

            XmlDocument doc = new XmlDocument();
            doc.LoadXml(xml);

            switch (doc.FirstChild.NamespaceURI)
            {
                case SolutionProfileV1Parser.Namespace:
                    return new SolutionProfileV1Parser().Parse(xml);

                case SolutionProfileV2Parser.Namespace:
                    return new SolutionProfileV2Parser().Parse(xml);

                default:
                    throw new InvalidOperationException(Resources.InvalidSolutionProfileSchema);
            }
        }
    }
}
