//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//
// 
//
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using IMSWorkBench.Infrastructure.Interface;
using Infosys.ATR.UIAutomation.SEE;
using System.Diagnostics;
using Microsoft.Practices.CompositeUI.EventBroker;
using IMSWorkBench.Infrastructure.Interface.Constants;
using Infosys.ATR.UIAutomation.Entities;
using System.Xml;
using System.Xml.Linq;

namespace IMSWorkBench.Scripts
{
    public partial class EditPresenter : Presenter<IEdit>
    {
        [EventPublication(EventTopicNames.Modify, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs<XDocument>> Modify;
        /// <summary>
        /// This method is a placeholder that will be called by the view when it has been loaded.
        /// </summary>
        public override void OnViewReady()
        {
            base.OnViewReady();
        }

        /// <summary>
        /// Close the view
        /// </summary>
        public override void OnCloseView()
        {
            base.CloseView();
        }

        private void Initialize()
        {
            System.Xml.XmlDocument xmlDoc = new System.Xml.XmlDocument();
            xmlDoc.Load(this.View.Path);
            this.View.EditUseCase = SerializeAndDeserialize.Deserialize(xmlDoc.OuterXml, typeof(Infosys.ATR.UIAutomation.Entities.UseCase))
                as Infosys.ATR.UIAutomation.Entities.UseCase;
        }

        public void OnModify(EventArgs<XDocument> eventArgs)
        {
            if (Modify != null)
            {
                Modify(this, eventArgs);
            }
        }
    }
}

