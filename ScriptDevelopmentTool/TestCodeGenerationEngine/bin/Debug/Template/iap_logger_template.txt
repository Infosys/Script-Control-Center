## ===============================================================================
## Except for any open source software components embedded in this Infosys proprietary software program
## (Infosys Automation Platform), this Program is protected by copyright laws,
## international treaties and other pending or existing intellectual property rights in India, the United States
## and other countries.
## Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means
## (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any
## distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will
## be prosecuted to the maximum extent possible under the law.
## ===============================================================================
## Generated by Infosys Automation Platform.
## Please follow agreement before making changes to this file.
## ===============================================================================

##############################################################################
##This class was code generated by Infosys Automation Platform.

## Description: This file contains classes which are used for logging to Database or Text Files

##Copyright (c) 2014 - 2015 Infosys Technologies Ltd. All Rights Reserved.
###############################################################################

import clr
import sys
import traceback
import iap_constants
import iap_utilities

from System.IO import Directory, Path
directory = Directory.GetCurrentDirectory()
rootDirectory = Directory.GetParent(directory).FullName

sys.path.append(iap_constants.IRONPYTHON_PATH)
sys.path.append(rootDirectory)

@Raw(Model.AddReference)

##############################################################################
### Company    : Infosys Limited
### Description: This clas valid values to be used for NotificationType
### Version    : 1
############################################################################## 
class IAP_NotificationType:

    def __init__(self): 
        print "Do nothing"

    # Manual login required in an application
    Login=1 
    # Error was raised in the workflow script resulting in failure of the workflow script
    Error=2 
    # Error was raised in the ticket extractor script
    ErrorExtractor=3 
    # Any information message which should be notified via email
    Information=4 

##############################################################################
### Company    : Infosys Limited
### Description: This clas contains fucntions which can be used for auditing,
###              logging, notifications to database
### Version    : 1
##############################################################################
class Iap_db_logger(object):
    #logAuditURL = None
    #logErrrorURL = None
    #notifyURL = None
    #scriptId = None
    
    ##############################################################################
    ### Constructor         
    ### Instantiate the class  Iap_db_logger
    ### Returns None
    ##############################################################################
    def __init__(self, scriptId):
        self.scriptId = scriptId
        server = iap_utilities.getValueFromConfig(iap_constants.RESTAPI,iap_constants.SERVER)
        self.logAuditURL = "http://" + server + "/iapinfrastructureservices/Logger.svc"
        self.logErrrorURL = "http://" + server + "/iapinfrastructureservices/Logger.svc"
        self.notifyURL = "http://" + server + "/iapinfrastructureservices/Logger.svc"        
    
    ##############################################################################
    ### Method         :  CreateAuditData
    ### Description    :  This method creates a List of Key Value pairs which can
    ###                   be audited along with message into Database
    ##############################################################################
    def CreateAuditData(self, key, value, logData = List[IAP.Infrastructure.Services.Contracts.LogData]()):
        data = LogData()
        data.Key = key
        data.Value = value
        logData.Add(data) 
        return logData
        
    ##############################################################################
    ### Method         :  logAudit
    ### Description    :  This method audits the message and data in the database
    ##############################################################################
    def logAudit(self, message, logData = None, stateId = 1):
        client = LoggerClient()
        log = Log()
        log.CreatedBy = iap_utilities.getLoggedInUser()  
        log.StateId = stateId
        log.Data = logData
        log.MachineName = iap_utilities.getMachineName()
        log.MachineIP = iap_utilities.getMachineIP()
        log.Message = message
        log.ScriptId = self.scriptId 
        client.LogAudit(self.logAuditURL,log)

    ##############################################################################
    ### Method         :  logError
    ### Description    :  This method logs the error details in the database
    ##############################################################################
    def logError(self, message, notificationType = IAP_NotificationType.Error, errorTypeId = ErrorType.Critical):   
        traceback_ = sys.exc_info()
        ex1 = traceback.format_exception(traceback_[0], traceback_[1], traceback_[2])
        errorDetails ="" 
        for str in ex1:
            errorDetails += (str)
        errorTypeId =ErrorType.Critical       
        client = LoggerClient()
        log = Log()
        log.CreatedBy = iap_utilities.getLoggedInUser()
        log.MachineName = iap_utilities.getMachineName()
        log.MachineIP = iap_utilities.getMachineIP()
        log.Message = message
        log.ScriptId = self.scriptId 
        log.ErrorDetails = errorDetails
        log.ErrorTypeID = errorTypeId
        log.NotificationType = NotificationType.Error 
        log.Recipients = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS,iap_constants.RECIPIENTS)
        client.LogAudit(self.logErrrorURL,log)    
        

    ##############################################################################
    ### Method         :  notify
    ### Description    :  This method inokes a REST service which sends an email
    ##############################################################################
    def notify(self, message, notificationType = IAP_NotificationType.Information, messageBody = "", AttachmentFileNames = None, stateId = 1, recipients = None):    
        client = LoggerClient()
        log = Log()
        log.CreatedBy = iap_utilities.getLoggedInUser()
        log.MachineName = iap_utilities.getMachineName()
        log.MachineIP = iap_utilities.getMachineIP()
        log.Message = message
        log.ScriptId = self.scriptId 
        if recipients is None:
            log.Recipients = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS,iap_constants.RECIPIENTS)     
        log.StateId = stateId 
        log.NotificationType = NotificationType.Information
        log.AttachmentFileNames = AttachmentFileNames
        client.LogAudit(self.notifyURL,log)

##############################################################################
### Company    : Infosys Limited
### Description: This clas contains fucntions which can be used for auditing,
###              logging, notifications to text file
### Version    : 1
##############################################################################
class Iap_file_logger(object):   

    scriptId = ""
    obj = None

    ##############################################################################
    ### Constructor         
    ### Instantiate the class  Iap_file_logger
    ### Returns None
    ##############################################################################
    def __init__(self, scriptId): 
        self.scriptId = scriptId
        self.obj = InfrastructureClientLibrary.FileLogger()
        textFileLoggingPath = iap_constants.LOG_PATH #textFileLoggingPath = iap_utilities.getValueFromConfig(iap_constants.LOGGER, iap_constants.LOGGING_LISTENER)		
        self.obj.AddTraceListener(textFileLoggingPath,textFileLoggingPath,textFileLoggingPath,False,False)

    ##############################################################################
    ### Method         :  logAudit
    ### Description    :  This method audits the message and data in the text file
    ##############################################################################
    def logAudit(self, message, logData = None, stateId = 1):       
        logDataMessage = ""
        logMessage = "ScriptId: " + self.scriptId + "; Message: " + message + "; ";        
        if logData is not None:
            for dat in logData:
                logDataMessage += dat.Key + ": " + dat.Value + "; ";
        logMessage +=logDataMessage              
        self.obj.WriteToFile(logMessage, False,True)

    ##############################################################################
    ### Method         :  CreateAuditData
    ### Description    :  This method creates a List of Key Value pairs which can
    ###                   be audited along with message into Database
    ##############################################################################
    def CreateAuditData(self, key, value, logData = List[IAP.Infrastructure.Services.Contracts.LogData]()):
        data = LogData()
        data.Key = key
        data.Value = value
        logData.Add(data) 
        return logData
    
    ##############################################################################
    ### Method         :  logError
    ### Description    :  This method logs the error details in the text file
    ##############################################################################
    def logError(self, message, notificationType = IAP_NotificationType.Error):
        traceback_ = sys.exc_info()
        ex1 = traceback.format_exception(traceback_[0], traceback_[1], traceback_[2])
        errorDetails ="" 
        for strErr in ex1:
            errorDetails += (strErr)
        logMessage = "ScriptId: " + self.scriptId + "; Message: " + message + "; notificationType: " + str(notificationType) + "; errorDetails: " + errorDetails
        self.obj.WriteToFile(logMessage, True,False)     
        #self.notify(message, IAP_NotificationType.Error, message)
   
    ##############################################################################
    ### Method         :  notify
    ### Description    :  This method inokes a REST service which sends an email
    ##############################################################################     
    def notify(self, messsageSubject, notificationType = IAP_NotificationType.Information, messageBody = "", fromEmailId = None, recipients = None, smtp_server = None, smtp_port = int(0), attachmentFileNames = None, password = None):
        client = InfrastructureClientLibrary.SendMail()

        if recipients is None:
            recipients = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS, iap_constants.RECIPIENTS)
        if fromEmailId is None:
            fromEmailId = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS, iap_constants.SMTP_USERNAME)
        if password is None:
            password = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS, iap_constants.SMTP_PASSWORD)
        if smtp_server is None:
            smtp_server = iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS, iap_constants.SMTP_SERVER)
        if smtp_port == 0 or smtp_port is None:
            smtp_port = int(iap_utilities.getValueFromConfig(iap_constants.NOTIFICATIONS, iap_constants.SMTP_PORT))
                  
        result = client.Send(messsageSubject, messageBody, attachmentFileNames, fromEmailId, recipients, smtp_server, smtp_port, password, 1, False)
        return result
    
##############################################################################
### Company    : Infosys Limited
### Description: This clas valid values to be used in errorType
### Version    : 1
##############################################################################    
class ErrorType:

    def __init__(self): 
        print "Do nothing"

    # Critical error 
    Critical = 1
    # A warning
    Warning = 2  


##############################################################################
### Company    : Infosys Limited
### Description: This clas contains values that can be used as return codes from 
###              sub modules in Resolver
### Version    : 1
############################################################################## 
class WorkflowReturnCodes:

    def __init__(self): 
        print "Do nothing"

    # Successfull execution of sub module or main workflow script
    Success = 0 
    # Failure of execution of sub module or main workflow script
    Failure = 1 

##############################################################################
### Company    : Infosys Limited
### Description: This clas contains values that can be used as return messages from 
###              sub modules in Resolver
### Version    : 1
##############################################################################
class WorkflowReturnMessages:

    def __init__(self): 
        print "Do nothing"

    # Successfull execution of sub module or main workflow script
    Success = "Success" 
    # Failure of execution of sub module or main workflow script
    Failure = "Exception in resolver"               