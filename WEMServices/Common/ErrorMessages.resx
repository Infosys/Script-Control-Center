<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Client_Empty" xml:space="preserve">
    <value>Client cannot be empty!</value>
  </data>
  <data name="Companies_Not_Found" xml:space="preserve">
    <value>No companies found in Companies table.</value>
  </data>
  <data name="Company_Name_Empty" xml:space="preserve">
    <value>Company Name cannot be empty!</value>
  </data>
  <data name="Critical" xml:space="preserve">
    <value>Oops! It seems like we are facing some technical difficulties at the moment, sorry for the inconvenience caused. Please try visiting us later; we are trying to resolve your issue.</value>
  </data>
  <data name="Data_Format_Error" xml:space="preserve">
    <value>Data was not formatted correctly.</value>
  </data>
  <data name="Data_NotFound" xml:space="preserve">
    <value>Data of entity {0} for attribute(s) {1} was not found. For transaction with {2}</value>
  </data>
  <data name="Device_Empty" xml:space="preserve">
    <value>Device cannot be empty!</value>
  </data>
  <data name="Document_Upload_Failed" xml:space="preserve">
    <value>File with {0} and {1} could not be uploaded. Error Message: {2}</value>
  </data>
  <data name="Duplicate_Script_Name" xml:space="preserve">
    <value>Script name is already present in this category</value>
  </data>
  <data name="Duplicate_Workflow_Name" xml:space="preserve">
    <value>Workflow name is already present in this category</value>
  </data>
  <data name="FileUpload_Validation_Failed" xml:space="preserve">
    <value>File Upload Validation Failed. Reason: {0}</value>
  </data>
  <data name="InvalidCharacter_Validation" xml:space="preserve">
    <value>The value: {0} for property {1} is using reserved keyword(s) which is not permitted. Please modify the name using valid alphanumeric characters only and re-submit.</value>
  </data>
  <data name="Message_Send_Failure" xml:space="preserve">
    <value>Failed to send message to queue.</value>
  </data>
  <data name="Method_Input_Parameters_Invalid" xml:space="preserve">
    <value>Parameter values passed to method is Invalid or Empty.</value>
  </data>
  <data name="PKandRK_Validation_Failed" xml:space="preserve">
    <value>Unable to fetch presentation, as the keys provided do not match with any active records in our database.</value>
  </data>
  <data name="Request_Parameters_Invalid" xml:space="preserve">
    <value>The request send to the worker for procesing conatins either invalid parameters or some mandatory fields do not contain the required data.</value>
  </data>
  <data name="Source_IP_Empty" xml:space="preserve">
    <value>SourceIP cannot be null!</value>
  </data>
  <data name="Standard_Error" xml:space="preserve">
    <value>You have faced a error we are unable to resolve at the moment. Please contact the administrator (Support ID: {handlingInstanceId}).</value>
  </data>
  <data name="Title_Empty" xml:space="preserve">
    <value>Title cannot be null!</value>
  </data>
  <data name="User_Exists" xml:space="preserve">
    <value>User {0} already present in this category</value>
  </data>
  <data name="Validation_Errors" xml:space="preserve">
    <value>Input Validation Check Failed.</value>
  </data>
  <data name="WorkflowEntity_Not_Found" xml:space="preserve">
    <value>Workflow with PartitionKey {0} and RowKey {1} does not exist.</value>
  </data>
</root>