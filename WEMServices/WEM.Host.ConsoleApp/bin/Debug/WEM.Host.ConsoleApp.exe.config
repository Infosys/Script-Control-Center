<?xml version="1.0" encoding="utf-8" ?>
<!--/****************************************************************
Copyright 2021 Infosys Ltd. 
Use of this source code is governed by Apache License Version 2.0 that can be found in the LICENSE file or at 
http://www.apache.org/licenses/
 ***************************************************************/-->
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <section name="LISettings" type="Infosys.Lif.LegacyIntegratorService.ConfigHandler, Infosys.Lif.LegacyIntegratorService"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="niaAdapterProperties" type="System.Configuration.NameValueSectionHandler, System, Version=4.0.0.0,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>
  <niaAdapterProperties>
    <add key="casServerUrl" value="https://casServerUrl/cas/v1/tickets" />
    <add key="casServiceUrl" value="http://casServiceUrl/iap-controller/iap-client" />
    <add key="niaEcrScriptExecuteUrl" value="http://niaEcrScriptExecuteUrl/iap-controller/spring/script/runScript" />
    <add key="niaEcrFindByActivityIdUrl" value="http://niaEcrFindByActivityIdUrl/iap-controller/spring/scriptInstance/findByActivityId" />
    <add key="niaEcrFindAllNodesUrl" value="http://niaEcrFindAllNodesUrl/iap-controller/spring/node/findAll" />
    <add key="serviceAreas" value="General" />
  </niaAdapterProperties>
  <loggingConfiguration name="WEMLogging" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Database Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" databaseInstanceName="WEMLogsStore" writeLogStoredProcName="WriteLog" addCategoryStoredProcName="AddCategory" formatter="Text Formatter" traceOutputOptions="DateTime"/>
      <add fileName="D:\tracelog.e2e" name="XML Trace Listener" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.XmlTraceListenerData,Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.XmlTraceListener,Microsoft.Practices.EnterpriseLibrary.Logging"/>
	  <add name="Rolling Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"  
        fileName="RollingFlatFile.log"  
        footer="----------------------------------" formatter="Text Formatter"  
        header="" rollInterval="Day"  
        traceOutputOptions="DateTime, Timestamp" filter="All" />  
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="ActivityId: {property(ActivityId)}{newline}&#xA;Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter"/>
    </formatters>
    <categorySources>
      <add switchValue="Off" name="System.ServiceModel">
        <listeners>
          <add name="XML Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="Error" name="General">
        <listeners>
          <add name="Database Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="Off" name="Performance">
        <listeners>
          <add name="Database Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="Information" name="Statistics">
        <listeners>
          <add name="Database Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="Off" name="MessageArchive">
        <listeners>
          <add name="Database Trace Listener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events"/>
      <notProcessed switchValue="All" name="Unprocessed Category"/>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Rolling Flat File Trace Listener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="WEM.SERVICE">
        <exceptionTypes>
          <add name="WEMException" type="Infosys.WEM.Infrastructure.Common.WEMException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add type="Infosys.WEM.Infrastructure.Common.HTTPErrorExceptionHandler, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="WEMCriticalException" type="Infosys.WEM.Infrastructure.Common.WEMCriticalException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Critical" title="WEM Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="1"/>
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.WEM.Infrastructure.Common.ErrorMessages, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.WEM.Infrastructure.Common.WEMException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null"/>
              <add type="Infosys.WEM.Infrastructure.Common.HTTPErrorExceptionHandler, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="WEMDataItemNotFoundException" type="Infosys.WEM.Infrastructure.Common.WEMDataItemNotFoundException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="WEM Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add type="Infosys.WEM.Infrastructure.Common.HTTPErrorExceptionHandler, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="WEMValidationException" type="Infosys.WEM.Infrastructure.Common.WEMValidationException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add type="Infosys.WEM.Infrastructure.Common.HTTPErrorExceptionHandler, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
              <!--<add exceptionMessage="Oops! A System Error Occurred in the Service Layer." faultContractType="Infosys.WEM.Infrastructure.Common.ServiceFaultError, Infosys.WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null"
  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
  name="Default Fault Contract Handler">
              </add>-->
            </exceptionHandlers>
          </add>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="WEM Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.WEM.Infrastructure.Common.ErrorMessages, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.WEM.Infrastructure.Common.WEMException, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null"/>
              <add type="Infosys.WEM.Infrastructure.Common.HTTPErrorExceptionHandler, WEM.Infrastructure.Common, Version=1.4.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <LISettings configSource="bin\Configuration\LISettings.config"/>
  <dataConfiguration defaultDatabase="WEMLogsStore"/>
  <system.data>
    <DbProviderFactories>
      <clear/>
      <!--<add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.Entity.MySqlClientFactory, MySql.Data.Entity, Culture=neutral, PublicKeyToken=c5687fc88969c44d"/>
      <remove invariant="MySql.Data.MySqlClient"/>
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.6.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d"/>-->
	  <remove invariant="Npgsql" />
      <add name="Npgsql Data Provider" invariant="Npgsql" description="Data Provider for PostgreSQL" type="Npgsql.NpgsqlFactory, Npgsql, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7" />
    </DbProviderFactories>
  </system.data>
  <connectionStrings>
   
   
  </connectionStrings>
  <entityFramework>
    <!--<defaultConnectionFactory type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />-->
    <!--<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />-->
	<defaultConnectionFactory type="Npgsql.NpgsqlFactory, Npgsql" />
    <providers>
      <!--<provider invariantName="MySql.Data.MySqlClient" type="MySql.Data.MySqlClient.MySqlProviderServices, &#xA;        MySql.Data.Entity.EF6" />-->
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, &#xA;        EntityFramework.SqlServer" /> 
      <provider invariantName="Npgsql" type="Npgsql.NpgsqlServices, &#xA; EntityFramework6.Npgsql" />
    </providers>
  </entityFramework>
  <!--<entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />

  </entityFramework>-->
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
    <add key="ADConnectionString" value="ADConnectionString"/>
    <add key="Company" value="1"/>
    <add key="DL" value="IAP_Scripts"/>
    <add key="Domain" value="Domain"/>
    <add key="AppAuthKey" value="65ufuasgebk"/>
    <add key="Mode" value="Delegate"/>
    <add key="ByPassCertificate" value="yes"/>
  </appSettings>
  <system.web>
    <!--<compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>-->
    <httpCookies httpOnlyCookies="true"/>
    <customErrors mode="Off"/>
    <!--<compilation debug="true"/>-->
    <authorization>
      <allow users="*" verbs="OPTIONS" />
      <deny users="?" />
    </authorization>
  </system.web>
  <system.serviceModel>
    <bindings>
      <netNamedPipeBinding>
        <binding name="NetNamedPipeBinding" >
          <security mode = "None">
          </security>
        </binding >
      </netNamedPipeBinding>
    </bindings>
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="restEndpointWithHelp" maxReceivedMessageSize="20000000" maxBufferSize="20000000"
                          maxBufferPoolSize="20000000" helpEnabled="true" defaultOutgoingResponseFormat="Json"
          automaticFormatSelectionEnabled="false" faultExceptionEnabled="true">
          <readerQuotas maxDepth="32"
                maxArrayLength="200000000"
                maxStringContentLength="200000000"/>
          <!--<security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows"/>
          </security>-->
        </standardEndpoint>
      </webHttpEndpoint>
    </standardEndpoints>
    <behaviors>
      <endpointBehaviors>
        <behavior name="restfulBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceThrottling maxConcurrentCalls="32" maxConcurrentSessions="200"
            maxConcurrentInstances="232" />
          <serviceSecurityAudit auditLogLocation="Application" serviceAuthorizationAuditLevel="SuccessOrFailure"
            messageAuthenticationAuditLevel="SuccessOrFailure" />
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service name="Infosys.WEM.Service.Implementation.WorkflowAutomation" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="workflowRestEndpoint" contract="Infosys.WEM.Service.Contracts.IWorkflowAutomation" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.ScriptRepository" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="scriptRepoRestEndpoint" contract="Infosys.WEM.Scripts.Service.Contracts.IScriptRepository" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMScriptService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.CommonRepository" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="CommonRestEndpoint" contract="Infosys.WEM.Service.Common.Contracts.ICommonRepository" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMCommonService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.ExportRepository" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="ExportRepoRestEndpoint" contract="Infosys.WEM.Export.Service.Contracts.IExportRepository" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMExportService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.ECRServices" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="ECRServicesRestEndpoint" contract="Infosys.WEM.Nia.Service.Contracts.IECRServices" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMECRService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.SecurityAccess" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="securityAccessRestEndpoint" contract="Infosys.WEM.SecurityAccess.Contracts.ISecurityAccess" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMSecurityAccessService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="WEM.ScriptExecution.Implementation.ScriptExecute" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="scriptExecRestEndpoint" contract="WEM.ScriptExecution.Contracts.IScriptExecute" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMScriptExecService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.RegisteredNodes" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="RegisteredNodesRestEndpoint" contract="Infosys.WEM.Node.Service.Contracts.INodes" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMNodeService.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.ScheduledRequest" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="ScheduledRequestRestEndpoint" contract="Infosys.WEM.Node.Service.Contracts.IScheduleRequest" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMScheduledRequest.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.SemanticCluster" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="SemanticClusterRestEndpoint" contract="Infosys.WEM.Node.Service.Contracts.ISemanticCluster" endpointConfiguration="restEndpointWithHelp"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMSemanticCluster.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.Transaction" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="TransactionRestEndpoint" contract="Infosys.WEM.Node.Service.Contracts.ITransaction" endpointConfiguration="restEndpointWithHelp" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMTransaction.svc"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Infosys.WEM.Service.Implementation.AutomationTrackerRepository" behaviorConfiguration="serviceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMAutomationTrackerService.svc"/>
          </baseAddresses>
        </host>
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="AutomationRestEndpoint" contract="Infosys.WEM.AutomationTracker.Contracts.IAutomationTrackerRepository" endpointConfiguration="restEndpointWithHelp" />
        <!--<endpoint address="" binding="netNamedPipeBinding" bindingConfiguration="NetNamedPipeBinding" contract="Infosys.WEM.AutomationTracker.Contracts.IAutomationTrackerRepository" endpointConfiguration="" />-->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="Infosys.WEM.Service.Implementation.ScriptExecuteObserver" behaviorConfiguration="serviceBehavior">
        <endpoint address="" kind="webHttpEndpoint" bindingConfiguration="" name="ObserverRestEndpoint" contract="Infosys.WEM.Observer.Contracts.IScriptExecuteObserver" endpointConfiguration="restEndpointWithHelp" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:81/wemscriptexecutor/WEMObserverService.svc"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"
      multipleSiteBindingsEnabled="true" />
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtTransportLevel="true"/>
    </diagnostics>
    <extensions>
      <behaviorExtensions>
        <add name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationElement,  Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <!--<system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="All">
        <listeners>
          <add name="XML Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.EntLibLoggingProxyTraceListener,Microsoft.Practices.EnterpriseLibrary.Logging"/>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>-->
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
    <httpProtocol>
      <customHeaders>
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Request-Method" value="POST,GET,PUT,DELETE,OPTIONS" />
        <add name="Access-Control-Allow-Headers" value="X-Requested-With,Content-Type" />
        <add name="Access-Control-Allow-Credentials" value="true" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="5.0.414.0" newVersion="5.0.505.0"/>
      </dependentAssembly>
	  <!-- <dependentAssembly> -->
        <!-- <assemblyIdentity name="System.Data.Entity.Core.EntityException, EntityFramework" publicKeyToken="31bf3856ad364e35" culture="neutral"/> -->
        <!-- <bindingRedirect oldVersion="6.0.20911.0" newVersion="6.2.61023.0"/> -->
      <!-- </dependentAssembly> -->
    </assemblyBinding>
  </runtime>
</configuration>